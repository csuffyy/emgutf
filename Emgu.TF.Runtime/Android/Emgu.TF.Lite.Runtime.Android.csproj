<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D11AA8F3-DEF2-4F40-A4E5-FB8A8938DDB7}</ProjectGuid>
    <ProjectTypeGuids>{EFBA0AD7-5A72-4C68-AF49-83D382785DCF};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TemplateGuid>{9ef11e43-1701-4396-8835-8392d57abb70}</TemplateGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Emgu.TF.Lite</RootNamespace>
    <AssemblyName>Emgu.TF.Lite.Runtime.Android</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <AndroidResgenFile>Resources\Resource.designer.cs</AndroidResgenFile>
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <AndroidUseLatestPlatformSdk>false</AndroidUseLatestPlatformSdk>
    <TargetFrameworkVersion>v9.0</TargetFrameworkVersion>
    <AndroidUseAapt2>true</AndroidUseAapt2>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\..\lib\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>portable</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\..\lib\Build\$(AssemblyName)\.$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <TFLiteBinaryDir>$(MSBuildThisFileDirectory)..\..\lib</TFLiteBinaryDir>
    <EmguTFLiteDir>$(MSBuildThisFileDirectory)</EmguTFLiteDir>
  </PropertyGroup>
  <PropertyGroup>
    <EmguTFLiteLinkTarget Condition="('$(AndroidApplication)'=='True' OR '$(AndroidApplication)'=='true')">Xamarin Android App</EmguTFLiteLinkTarget>
    <EmguTFLiteLinkTarget Condition="!('$(AndroidApplication)'=='True' OR '$(AndroidApplication)'=='true')">Xamarin Android Library</EmguTFLiteLinkTarget>
    <!--
		<EmguTFLiteNativeArmeabi>$(TFLiteBinaryDir)\android\armeabi\libtfliteextern.so</EmguTFLiteNativeArmeabi>
        <EmguTFLiteBuildAndroidArmeabi Condition="$(AndroidSupportedAbis.Contains('armeabi%3')) OR $(AndroidSupportedAbis.Contains('armeabi,')) OR $(AndroidSupportedAbis.Contains('armeabi;')) OR $(AndroidSupportedAbis.EndsWith('armeabi')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='armeabi')">True</EmguTFLiteBuildAndroidArmeabi>
        <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidArmeabi)'=='True' AND !Exists('$(EmguTFLiteNativeArmeabi)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. Armeabi is targeted, but file $(EmguTFLiteNativeArmeabi) is missing.</EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidArmeabi)'=='True' AND Exists('$(EmguTFLiteNativeArmeabi)')">$(EmguTFLiteDeployMessage)armeabi </EmguTFLiteDeployMessage>
		-->
    <EmguTFLiteNativeArmeabiv7a>$(TFLiteBinaryDir)\android\armeabi-v7a\libtfliteextern.so</EmguTFLiteNativeArmeabiv7a>
    <EmguTFLiteBuildAndroidArmeabiv7a Condition="$(AndroidSupportedAbis.Contains('armeabi-v7a%3')) OR $(AndroidSupportedAbis.Contains('armeabi-v7a,')) OR $(AndroidSupportedAbis.Contains('armeabi-v7a;')) OR $(AndroidSupportedAbis.EndsWith('armeabi-v7a')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='armeabi-v7a')">True</EmguTFLiteBuildAndroidArmeabiv7a>
    <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidArmeabiv7a)'=='True' AND !Exists('$(EmguTFLiteNativeArmeabiv7a)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. Armeabi-v7a is targeted, but file $(EmguTFLiteNativeArmeabiv7a) is missing.</EmguTFLiteErrorMessage>
    <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidArmeabiv7a)'=='True' AND Exists('$(EmguTFLiteNativeArmeabiv7a)')">$(EmguTFLiteDeployMessage)armeabi-v7a </EmguTFLiteDeployMessage>
    <EmguTFLiteNativeArm64v8a>$(TFLiteBinaryDir)\android\arm64-v8a\libtfliteextern.so</EmguTFLiteNativeArm64v8a>
    <EmguTFLiteBuildAndroidArm64v8a Condition="$(AndroidSupportedAbis.Contains('arm64-v8a%3')) OR $(AndroidSupportedAbis.Contains('arm64-v8a,')) OR $(AndroidSupportedAbis.EndsWith('arm64-v8a;')) OR $(AndroidSupportedAbis.EndsWith('arm64-v8a')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU')  OR ('$(Platform)'=='arm64-v8a')">True</EmguTFLiteBuildAndroidArm64v8a>
    <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidArm64v8a)'=='True' AND !Exists('$(EmguTFLiteNativeArm64v8a)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. Arm64-v8a is targeted, but file $(EmguTFLiteNativeArm64v8a) is missing.</EmguTFLiteErrorMessage>
    <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidArm64v8a)'=='True' AND Exists('$(EmguTFLiteNativeArm64v8a)')">$(EmguTFLiteDeployMessage)arm64-v8a </EmguTFLiteDeployMessage>
    <EmguTFLiteNativex86>$(TFLiteBinaryDir)\android\x86\libtfliteextern.so</EmguTFLiteNativex86>
    <EmguTFLiteBuildAndroidx86 Condition="$(AndroidSupportedAbis.Contains('x86%3')) OR $(AndroidSupportedAbis.Contains('x86,')) OR $(AndroidSupportedAbis.Contains('x86;')) OR $(AndroidSupportedAbis.EndsWith('x86')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='x86')">True</EmguTFLiteBuildAndroidx86>
    <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidx86)'=='True' AND !Exists('$(EmguTFLiteNativex86)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. x86 is targeted, but file $(EmguTFLiteNativex86) is missing.</EmguTFLiteErrorMessage>
    <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidx86)'=='True' AND Exists('$(EmguTFLiteNativex86)')">$(EmguTFLiteDeployMessage)x86 </EmguTFLiteDeployMessage>
    <EmguTFLiteNativex8664>$(TFLiteBinaryDir)\android\x86_64\libtfliteextern.so</EmguTFLiteNativex8664>
    <EmguTFLiteBuildAndroidx8664 Condition="$(AndroidSupportedAbis.Contains('x86_64%3')) OR $(AndroidSupportedAbis.Contains('x86_64,')) OR $(AndroidSupportedAbis.Contains('x86_64;')) OR $(AndroidSupportedAbis.EndsWith('x86_64')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='x86_64')">True</EmguTFLiteBuildAndroidx8664>
    <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidx8664)'=='True' AND !Exists('$(EmguTFLiteNativex8664)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. x86_64 is targeted, but file $(EmguTFLiteNativex8664) is missing.</EmguTFLiteErrorMessage>
    <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidx8664)'=='True' AND Exists('$(EmguTFLiteNativex8664)')">$(EmguTFLiteDeployMessage)x86_64 </EmguTFLiteDeployMessage>
  </PropertyGroup>
  <!-- armeabi -->
  <!--
      <ItemGroup Condition="'$(EmguTFLiteBuildAndroidArmeabi)'=='True' AND Exists('$(EmguTFLiteNativeArmeabi)')">
        <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativeArmeabi)">
          <Link>lib\armeabi\libtfliteextern.so</Link>
        </EmbeddedNativeLibrary>
        <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativeArmeabi)">
          <Link>lib\armeabi\libtfliteextern.so</Link>
        </AndroidNativeLibrary>
      </ItemGroup>
	  -->
  <!-- armeabi-v7a -->
  <ItemGroup Condition="'$(EmguTFLiteBuildAndroidArmeabiv7a)'=='True' AND Exists('$(EmguTFLiteNativeArmeabiv7a)')">
    <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativeArmeabiv7a)">
      <Link>lib\armeabi-v7a\libtfextern.so</Link>
    </EmbeddedNativeLibrary>
    <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativeArmeabiv7a)">
      <Link>lib\armeabi-v7a\libtfextern.so</Link>
    </AndroidNativeLibrary>
  </ItemGroup>
  <!-- arm64-v8a -->
  <ItemGroup Condition="'$(EmguTFLiteBuildAndroidArm64v8a)'=='True' AND Exists('$(EmguTFLiteNativeArm64v8a)')">
    <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativeArm64v8a)">
      <Link>lib\arm64-v8a\libtfliteextern.so</Link>
    </EmbeddedNativeLibrary>
    <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativeArm64v8a)">
      <Link>lib\arm64-v8a\libtfliteextern.so</Link>
    </AndroidNativeLibrary>
  </ItemGroup>
  <!-- x86 -->
  <ItemGroup Condition="'$(EmguTFLiteBuildAndroidx86)'=='True' AND Exists('$(EmguTFLiteNativex86)')">
    <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativex86)">
      <Link>lib\x86\libtfliteextern.so</Link>
    </EmbeddedNativeLibrary>
    <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativex86)">
      <Link>lib\x86\libtfliteextern.so</Link>
    </AndroidNativeLibrary>
  </ItemGroup>
  <!-- x86_64 -->
  <ItemGroup Condition="'$(EmguTFLiteBuildAndroidx8664)'=='True' AND Exists('$(EmguTFLiteNativex8664)')">
    <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativex8664)">
      <Link>lib\x86_64\libtfliteextern.so</Link>
    </EmbeddedNativeLibrary>
    <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativex8664)">
      <Link>lib\x86_64\libtfliteextern.so</Link>
    </AndroidNativeLibrary>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Mono.Android" />
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Xamarin.Android.Support.v7.AppCompat" Version="28.0.0.3" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
    <Folder Include="Resources\drawable\" />
    <Folder Include="Resources\values\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\CommonAssemblyInfo.cs">
      <Link>CommonAssemblyInfo.cs</Link>
    </Compile>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Xamarin\Android\Xamarin.Android.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Target Name="EmguTFLitePackageBuildImports" BeforeTargets="PrepareForBuild">
    <!-- <Error Condition="'$(EmguTFLiteLinkTarget)'==''" Text="Emgu TF Lite is not able to detect the project type, please use the pre-compiled Emgu.TF.Lite.World dll or send a bug report to support@emgu.com" /> -->
    <Message Condition="'$(EmguTFLiteLinkTarget)'!=''" Text="Emgu TF Lite shared project compiling against $(EmguTFLiteLinkTarget)" Importance="High" />
    <Error Text="'$(EmguTFLiteErrorMessage)'" Condition="'$(EmguTFLiteErrorMessage)'!=''" />
    <Message Text="Emgu TF Lite Compiling with $(EmguTFLiteDeployMessage)binary" Condition="'$(EmguTFLiteDeployMessage)'!=''" Importance="High" />
    <Message Text="No native binary is deployed by the Emgu.TF shared project." Condition="'$(EmguTFLiteDeployMessage)'==''" Importance="High" />
  </Target>
  <Target Name="AfterBuild">
    <Message Text="Copying $(OutputPath)$(AssemblyName).dll, $(OutputPath)$(AssemblyName).xml to $(TFLiteBinaryDir)" Importance="high" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll" DestinationFolder="$(TFLiteBinaryDir)" ContinueOnError="true" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).xml" DestinationFolder="$(TFLiteBinaryDir)" ContinueOnError="true" />
  </Target>
</Project>